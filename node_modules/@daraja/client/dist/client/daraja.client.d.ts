import { DarajaClientConfig, LipaNaMpesaOnlinePaymentOptions } from './schemas';
import type { DarajaApiErrorResponse, LipaNaMpesaOnlinePaymentResponse } from './types';
/**
 * This class contains methods that form and send requests to Daraja API
 */
export default class DarajaClient {
    /**
     * @param config.businessShortcode - the organizations shortcode (Paybill or Buygoods - A 5 to 6 digit account number) used to identify an organization and receive the transaction.
     * @param config.consumerKey - used as the username to authenticate requests for generating access tokens
     * @param config.consumerSecret - used as the username to authenticate requests for generating access tokens
     * @param config.environment - the environment to send requests to (defaults to 'sandbox')
     * @param config.scopes - an array representing the operations permitted for this instance of the client (defaults to an empty array)
     * @param config.lnmPasskey - a string issued by Safaricom used to generate the password required for Lipa na Mpesa Online requests (must be provided if the 'lipa-na-mpesa-online' scope is included)
     * @throws {@link DarajaClientError}
     * @example
     * ```typescript
     * const client = new DarajaClient({
     *   businessShortcode: '123456',
     *   consumerKey: 'consumerKey',
     *   consumerSecret: 'consumerSecret',
     *   lnmPasskey: 'lnmPasskey',
     *   scopes: ['lipa-na-mpesa-online'],
     * });
     * ```
     */
    constructor(config: DarajaClientConfig);
    private readonly businessShortcode;
    private accessTokenExpiry;
    private lnmPasskey;
    private readonly authHttp;
    private readonly mpesaHttp;
    private readonly validateScopes;
    private readonly hasTokenExpired;
    private readonly refreshAccessToken;
    /**
     *
     * @internal
     */
    private readonly makeRequest;
    /**
     *
     * @internal
     */
    private readonly generateTimestampAndLNMPassword;
    /**
     * @param options.accountReference - This is an alpha-numeric parameter that is defined by your system as an Identifier of the transaction for CustomerPayBillOnline transaction type. Along with the business name, this value is also displayed to the customer in the STK Pin Prompt message. Maximum of 12 characters.
     * @param options.amount - This is the amount transacted, normaly a numeric value. It is the money that customer pays to the Shorcode. Only whole numbers are supported.
     * @param options.callbackURL - This is a valid secure URL that is used to receive notifications from M-Pesa API. It is the endpoint to which the results will be sent by M-Pesa API.
     * @param options.partyA - This is the phone number sending money. The parameter expected is a Valid Safaricom Mobile Number that is M-Pesa registered in the format 2547XXXXXXXX
     * @param options.transactionDescription - This is any additional information/comment that can be sent along with the request from your system. Maximum of 13 Characters.
     * @param options.transactionType - This is the transaction type that is used to identify the transaction when sending the request to M-Pesa.
     * @param options.partyB - The organization receiving the funds. The parameter expected is a 5 to 7 digit (defaults to businessShortcode passed in the {@link DarajaClient} constructor)
     * @param options.phoneNumber - This is the Mobile Number to receive the STK Pin Prompt (defaults to partyA)
     * @throws {@link DarajaClientError} | {@link DarajaAuthenticationError}
     * @example
     * ```typescript
     * const transact = async () => {
     *   try {
     *     const response = await client.lipaNaMpesaOnlinePayment({
     *       accountReference: 'CompanyXLTD',
     *       amount: 1,
     *       callbackURL: 'http://mydomain.com/lnmcallback',
     *       partyA: '254701234567,
     *       transactionDescription: 'Payment of X',
     *       transactionType: 'CustomerPayBillOnline',
     *     });
     *     // do something with the response
     *   } catch (error) {
     *     // handle the error
     *   }
     * };
     *
     * transact()
     * ```
     */
    lipaNaMpesaOnlinePayment: (options: LipaNaMpesaOnlinePaymentOptions) => Promise<LipaNaMpesaOnlinePaymentResponse | DarajaApiErrorResponse>;
}
