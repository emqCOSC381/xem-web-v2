import { z } from 'zod';
declare const lipaNaMpesaOnlinePaymentTransactionTypeSchema: z.ZodUnion<[z.ZodLiteral<"CustomerPayBillOnline">, z.ZodLiteral<"CustomerBuyGoodsOnline">]>;
export declare const lipaNaMpesaOnlinePaymentOptionsSchema: z.ZodObject<{
    transactionType: z.ZodUnion<[z.ZodLiteral<"CustomerPayBillOnline">, z.ZodLiteral<"CustomerBuyGoodsOnline">]>;
    amount: z.ZodEffects<z.ZodUnion<[z.ZodString, z.ZodNumber]>, string, string | number>;
    partyA: z.ZodEffects<z.ZodUnion<[z.ZodString, z.ZodNumber]>, string, string | number>;
    partyB: z.ZodOptional<z.ZodEffects<z.ZodUnion<[z.ZodString, z.ZodNumber]>, string, string | number>>;
    phoneNumber: z.ZodOptional<z.ZodEffects<z.ZodUnion<[z.ZodString, z.ZodNumber]>, string, string | number>>;
    callbackURL: z.ZodString;
    accountReference: z.ZodString;
    transactionDescription: z.ZodString;
}, "strip", z.ZodTypeAny, {
    partyB?: string | undefined;
    phoneNumber?: string | undefined;
    transactionType: "CustomerPayBillOnline" | "CustomerBuyGoodsOnline";
    amount: string;
    partyA: string;
    callbackURL: string;
    accountReference: string;
    transactionDescription: string;
}, {
    partyB?: string | number | undefined;
    phoneNumber?: string | number | undefined;
    transactionType: "CustomerPayBillOnline" | "CustomerBuyGoodsOnline";
    amount: string | number;
    partyA: string | number;
    callbackURL: string;
    accountReference: string;
    transactionDescription: string;
}>;
export type LipaNaMpesaOnlinePaymentTransactionType = z.infer<typeof lipaNaMpesaOnlinePaymentTransactionTypeSchema>;
export type LipaNaMpesaOnlinePaymentOptions = z.input<typeof lipaNaMpesaOnlinePaymentOptionsSchema>;
export {};
