import { z } from 'zod';
declare const darajaClientConfigScopesSchema: z.ZodArray<z.ZodLiteral<"lipa-na-mpesa-online">, "many">;
export declare const darajaClientConfigSchema: z.ZodObject<{
    consumerKey: z.ZodString;
    consumerSecret: z.ZodString;
    businessShortcode: z.ZodEffects<z.ZodUnion<[z.ZodString, z.ZodNumber]>, string, string | number>;
    environment: z.ZodDefault<z.ZodOptional<z.ZodUnion<[z.ZodLiteral<"sandbox">, z.ZodLiteral<"production">]>>>;
    lnmPasskey: z.ZodOptional<z.ZodString>;
    scopes: z.ZodDefault<z.ZodOptional<z.ZodArray<z.ZodLiteral<"lipa-na-mpesa-online">, "many">>>;
}, "strip", z.ZodTypeAny, {
    lnmPasskey?: string | undefined;
    consumerKey: string;
    consumerSecret: string;
    businessShortcode: string;
    environment: "sandbox" | "production";
    scopes: "lipa-na-mpesa-online"[];
}, {
    environment?: "sandbox" | "production" | undefined;
    lnmPasskey?: string | undefined;
    scopes?: "lipa-na-mpesa-online"[] | undefined;
    consumerKey: string;
    consumerSecret: string;
    businessShortcode: string | number;
}>;
export type DarajaClientConfigScopes = z.infer<typeof darajaClientConfigScopesSchema>;
export type DarajaClientConfig = z.input<typeof darajaClientConfigSchema>;
export {};
